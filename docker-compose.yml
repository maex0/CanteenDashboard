services:
  prod:
    image: software-quality-with-cats:prod
    build:
      context: ./next
      dockerfile: Dockerfile
      target: prod
    environment:
      - NODE_ENV=production
    env_file:
      - ./next/.env.production
    ports:
      - '3000:3000'
    networks:
      - default
    restart: always
    depends_on:
      - db
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:3000/ || exit 1']
      interval: 20s
      timeout: 20s
      retries: 5

  dev:
    image: software-quality-with-cats:dev
    build:
      context: ./next
      dockerfile: Dockerfile
      target: dev
    environment:
      - NODE_ENV=development
    env_file:
      - ./next/.env.local
    ports:
      - '3001:3000'
    volumes:
      - ./next:/app
      - /app/node_modules
    depends_on:
      - db
  db:
    image: postgres:15-alpine
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:

networks:
  default:
    driver: bridge
